/**
 * Script de migraci√≥n para agregar contrase√±as a usuarios existentes
 * Este script agrega los campos necesarios para el nuevo sistema de autenticaci√≥n
 * 
 * NOTA: Solo ejecutar una vez despu√©s de implementar el nuevo sistema
 */

const fs = require('fs');
const path = require('path');
const bcrypt = require('bcrypt');

const SALT_ROUNDS = 10;
const BD_PATH = path.join(process.cwd(), 'bd');
const USUARIOS_FILE = path.join(BD_PATH, 'usuarios.json');

// Contrase√±a temporal por defecto para usuarios existentes
const DEFAULT_TEMP_PASSWORD = 'Temporal123';

async function migrateUsers() {
  try {
    console.log('üîÑ Iniciando migraci√≥n de usuarios...\n');

    // Leer usuarios actuales
    const usuariosData = fs.readFileSync(USUARIOS_FILE, 'utf-8');
    const usuarios = JSON.parse(usuariosData);

    console.log(`üìä Encontrados ${usuarios.length} usuarios\n`);

    // Hashear la contrase√±a temporal
    console.log('üîê Generando hash de contrase√±a temporal...');
    const hashedPassword = await bcrypt.hash(DEFAULT_TEMP_PASSWORD, SALT_ROUNDS);
    console.log('‚úÖ Hash generado\n');

    // Migrar cada usuario
    const usuariosMigrados = await Promise.all(
      usuarios.map(async (usuario) => {
        // Si el usuario ya tiene contrase√±a, no hacer nada
        if (usuario.password) {
          console.log(`‚è≠Ô∏è  ${usuario.nombre} - Ya tiene contrase√±a, omitiendo...`);
          return usuario;
        }

        console.log(`üîß Migrando ${usuario.nombre} (${usuario.correo})...`);

        return {
          ...usuario,
          password: hashedPassword,
          temporaryPassword: true,
          assignedSpaceId: usuario.assignedSpaceId || undefined,
          lastPasswordChange: new Date().toISOString()
        };
      })
    );

    // Guardar usuarios migrados
    fs.writeFileSync(
      USUARIOS_FILE,
      JSON.stringify(usuariosMigrados, null, 2),
      'utf-8'
    );

    console.log('\n‚úÖ Migraci√≥n completada exitosamente!');
    console.log('\nüìã Resumen:');
    console.log(`   - Total de usuarios: ${usuarios.length}`);
    console.log(`   - Contrase√±a temporal: "${DEFAULT_TEMP_PASSWORD}"`);
    console.log('\n‚ö†Ô∏è  IMPORTANTE:');
    console.log('   - Todos los usuarios deben cambiar su contrase√±a en el primer inicio de sesi√≥n');
    console.log('   - Notifica a los usuarios sobre sus nuevas credenciales');
    console.log('\nüí° Credenciales de prueba:');
    usuariosMigrados.forEach(u => {
      console.log(`   - ${u.correo} / ${DEFAULT_TEMP_PASSWORD}`);
    });

  } catch (error) {
    console.error('\n‚ùå Error durante la migraci√≥n:', error);
    process.exit(1);
  }
}

// Ejecutar migraci√≥n
migrateUsers();





